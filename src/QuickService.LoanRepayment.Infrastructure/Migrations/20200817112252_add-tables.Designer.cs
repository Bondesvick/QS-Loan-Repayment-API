// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuickService.LoanRepayment.Infrastructure.Data;

namespace QuickService.LoanRepayment.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200817112252_add-tables")]
    partial class addtables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuickService.LoanRepayment.Core.Entities.CustomerRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnName("ACCOUNT_NAME")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("AccountNumber")
                        .HasColumnName("ACCOUNT_NUMBER")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAuthType")
                        .IsRequired()
                        .HasColumnName("CUSTOMER_AUTH_TYPE")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RejectionReason")
                        .HasColumnName("REJECTION_REASON")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Remarks")
                        .HasColumnName("REMARKS")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnName("REQUEST_TYPE")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TranId")
                        .HasColumnName("TRAN_ID")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TreatedBy")
                        .HasColumnName("TREATED_BY")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TreatedByUnit")
                        .HasColumnName("TREATED_BY_UNIT")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("TreatedDate")
                        .HasColumnName("TREATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .HasName("IX_REQUEST_STATUS");

                    b.HasIndex("TreatedByUnit")
                        .HasName("IX_TRBY_UNIT");

                    b.ToTable("CUSTOMER_REQUEST","dbo");
                });

            modelBuilder.Entity("QuickService.LoanRepayment.Core.Entities.LoanRepaymentDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnName("ACCOUNT_NAME")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnName("ACCOUNT_NUMBER")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("AccountSegment")
                        .IsRequired()
                        .HasColumnName("ACCOUNT_SEGMENT")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Amount")
                        .HasColumnName("AMOUNT")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<long>("CustomerRequestId")
                        .HasColumnName("CUSTOMER_REQUEST_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("LoanAccountNo")
                        .HasColumnName("LOAN_ACCOUNT_NO")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LoanCurrentBalance")
                        .HasColumnName("LOAN_CURRENT_BALANCE")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RepaymentAcctNo")
                        .HasColumnName("REPAYMENT_ACCOUNT_NO")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RepaymentAmount")
                        .HasColumnName("REPAYMENT_AMOUNT")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RepaymentPlan")
                        .HasColumnName("REPAYMENT_PLAN")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SignatureContent")
                        .HasColumnName("SIGNATURE_CONTENT")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SignatureExt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerRequestId")
                        .HasName("IX_LOAN_REPAYMENT_TRANX_DET_CUST_RQ_ID");

                    b.ToTable("LOAN_REPAYMENT_TRANSACTION_DETAILS","dbo");
                });

            modelBuilder.Entity("QuickService.LoanRepayment.Core.Entities.LoanRepaymentDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerRequestId")
                        .HasColumnName("CUSTOMER_REQ_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("DocContent")
                        .IsRequired()
                        .HasColumnName("DOC_CONTENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocExtension")
                        .IsRequired()
                        .HasColumnName("DOC_EXTENSION")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnName("DOC_NAME")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("DocTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerRequestId")
                        .HasName("IX_LOAN_REPAYMENT_DOC_CUST_REQ_ID");

                    b.ToTable("LOAN_REPAYMENT_DOC","dbo");
                });

            modelBuilder.Entity("QuickService.LoanRepayment.Core.Entities.LoanRepaymentDetails", b =>
                {
                    b.HasOne("QuickService.LoanRepayment.Core.Entities.CustomerRequest", "CustomerRequest")
                        .WithOne("LoanRepaymentDetails")
                        .HasForeignKey("QuickService.LoanRepayment.Core.Entities.LoanRepaymentDetails", "CustomerRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuickService.LoanRepayment.Core.Entities.LoanRepaymentDocument", b =>
                {
                    b.HasOne("QuickService.LoanRepayment.Core.Entities.CustomerRequest", "CustomerRequest")
                        .WithMany("LoanRepaymentDocuments")
                        .HasForeignKey("CustomerRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
